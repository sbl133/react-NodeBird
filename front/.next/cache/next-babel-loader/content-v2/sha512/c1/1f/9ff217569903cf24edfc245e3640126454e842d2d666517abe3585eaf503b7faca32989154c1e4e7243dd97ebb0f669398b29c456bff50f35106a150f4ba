{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'; //동적으로 action을 할당하기위한 action creater\n\nexport const loginRequestAction = data => {\n  console.log(\"loginAction\");\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'Bum',\n  id: 1,\n  Posts: [],\n  Followings: [],\n  Follower: []\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      console.log(\"login\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      console.log(\"login\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      console.log(\"login\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginRequestAction","data","console","log","type","logoutRequestAction","dummyUser","nickname","id","Posts","Followings","Follower","reducer","state","action","error"],"mappings":"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","sourcesContent":["\r\nexport const initialState = {\r\n    logInLoading: false, //로그인 시도중\r\n    logInDone: false,\r\n    logInError: null, \r\n    logOutLoading: false, //로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null, \r\n    signUpLoading: false, //회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null, \r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n}\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\n//동적으로 action을 할당하기위한 action creater\r\nexport const loginRequestAction = (data) => {\r\n    console.log(\"loginAction\");\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\nconst dummyUser = (data)=>({\r\n    ...data,\r\n    nickname: 'Bum',\r\n    id: 1,\r\n    Posts: [],\r\n    Followings: [],\r\n    Follower: [],\r\n})\r\nconst reducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        case LOG_IN_REQUEST:\r\n            console.log(\"login\");\r\n            return{\r\n                ...state,\r\n                logInLoading: true,\r\n                logInError: null,\r\n                logInDone: false,\r\n            };\r\n        case LOG_IN_SUCCESS:\r\n        console.log(\"login\");\r\n        return{\r\n            ...state,\r\n            logInLoading: false,\r\n            logInDone: true,\r\n            me: dummyUser(action.data),\r\n        };\r\n        case LOG_IN_FAILURE:\r\n            console.log(\"login\");\r\n            return{\r\n                ...state,\r\n                logInLoading: false,\r\n                logInError: action.error,\r\n            };\r\n        case LOG_OUT_REQUEST:\r\n            return{\r\n                ...state,\r\n                logOutLoading: true,\r\n                logOutDone: false,\r\n                logOutError: null,  \r\n            };\r\n        case LOG_OUT_SUCCESS:\r\n        return{\r\n            ...state,\r\n            logOutLoading: false,\r\n            logOutDone: true,\r\n            me: null,\r\n        };\r\n        case LOG_OUT_FAILURE:\r\n            return{\r\n                ...state,\r\n                logOutLoading: false,\r\n                logOutError: action.error,\r\n            };\r\n        case SIGN_UP_REQUEST:\r\n            return{\r\n                ...state,\r\n                signUpLoading: true,\r\n                signUpDone: false,\r\n                signUpError: null,  \r\n            };\r\n        case SIGN_UP_SUCCESS:\r\n        return{\r\n            ...state,\r\n            signUpLoading: false,\r\n            signUpDone: true,\r\n        };\r\n        case SIGN_UP_FAILURE:\r\n            return{\r\n                ...state,\r\n                signUpLoading: false,\r\n                signUpError: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}