{"ast":null,"code":"import _slicedToArray from \"C:/major/react-NodeBird/prepare/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport useInput from '../hooks';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"BMUrPCLdl7kExCN5QKzgquACXI8=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useState","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","useInput","PostForm","state","post","imagePaths","addPostDone","text","onChangeText","setText","dispatch","imageInput","onSubmit","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, {useCallback, useRef, useState, useEffect} from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPost} from '../reducers/post';\r\nimport useInput from '../hooks'\r\n\r\nconst PostForm = () => {\r\n    const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n    const [text, onChangeText, setText] =useInput('');\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n\r\n    useEffect(()=>{\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    }, [addPostDone])\r\n    const onSubmit=useCallback(()=>{\r\n        dispatch(addPost(text));\r\n    }, [text])\r\n    const onClickImageUpload = useCallback(()=>{\r\n        imageInput.current.click();\r\n    }, [imageInput.current])\r\n    return(\r\n        <Form \r\n        style={{margin: '10px 0 20px'}}\r\n        encType=\"multipart/form-data\"\r\n        onFinish={onSubmit}>\r\n            <Input.TextArea \r\n            value={text}\r\n            onChange={onChangeText}\r\n            maxLength={140}\r\n            placeholder=\"어떤 신기한 일이 있었나요?\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => {\r\n                    return(\r\n                    <div key={v} style={{display: 'inline-block'}}>\r\n                        <img src={v} style={{width: '200px'}} alt={v} />\r\n                        <div><Button>제거</Button></div>\r\n                    </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}