{"ast":null,"code":"var _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\components\\\\AppLayout.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Input, Menu, Row, Col } from 'antd';\nimport UserProfile from \"./UserProfile\";\nimport LoginForm from \"./LoginFrom\"; // import styled from 'styled-components';\n//inline style을 객체로 설정하면 렌더링될때마다 값이 다르다고 인식해서 리렌더링된다.\n//그것을 방지하기위해 커스텀으로 style설정을 한다.\n// const SearchInput = styled(Input.Search)`\n//     vertical-align: middle;\n// `;\n\nconst AppLayout = ({\n  children\n}) => {\n  //children: 해당component안에 있는 element?\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const InputSearchStyle = useMemo(() => ({\n    verticalAlign: 'middle'\n  }));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 32\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 39\n    }\n  }, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(SearchInput, {\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 38\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, isLoggedIn ? __jsx(UserProfile, {\n    setIsLoggedIn: setIsLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }\n  }) : __jsx(LoginForm, {\n    setIsLoggedIn: setIsLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 83\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, children), __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/sbl133\",\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Made by Bum\"))));\n};\n\nAppLayout.propTypes = {\n  //props의 type확인\n  // node: number, string, elements, array등을 통칭, \n  // isRequired: 실제type과 기입한 type이 다르면 오류메세지출력\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/components/AppLayout.js"],"names":["React","useState","useMemo","PropTypes","Link","Input","Menu","Row","Col","UserProfile","LoginForm","AppLayout","children","isLoggedIn","setIsLoggedIn","InputSearchStyle","verticalAlign","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { Input, Menu, Row, Col } from 'antd';\r\nimport UserProfile from \"./UserProfile\";\r\nimport LoginForm from \"./LoginFrom\";\r\n// import styled from 'styled-components';\r\n\r\n//inline style을 객체로 설정하면 렌더링될때마다 값이 다르다고 인식해서 리렌더링된다.\r\n//그것을 방지하기위해 커스텀으로 style설정을 한다.\r\n// const SearchInput = styled(Input.Search)`\r\n//     vertical-align: middle;\r\n// `;\r\n\r\nconst AppLayout = ({ children }) => { //children: 해당component안에 있는 element?\r\n    const [isLoggedIn, setIsLoggedIn]=useState(false);\r\n    const InputSearchStyle=useMemo(()=>({verticalAlign: 'middle'}))\r\n\r\n    return (\r\n        <div>\r\n            <Menu mode=\"horizontal\">\r\n                <Menu.Item>\r\n                <Link href='/'><a>노드버드</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                <Link href='/profile'><a>프로필</a></Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                <SearchInput enterButton />\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                <Link href='/signup'><a>회원가입</a></Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            {/* xs:모바일 sm:태블릿 md:작은데스크탑 gutter:간격(pedding) */}\r\n            <Row gutter={8}>\r\n                <Col xs={24} md={6}>    \r\n                    {isLoggedIn ? <UserProfile setIsLoggedIn={setIsLoggedIn} /> : <LoginForm setIsLoggedIn={setIsLoggedIn} />}\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                    {children}\r\n                </Col>\r\n                <Col xs={24} md={6}>\r\n                    {/* target=\"_blank\" 새창으로 링크연결을 할때에는 rel=\"nore---\"(보안상 기입) */}\r\n                    <a href=\"https://github.com/sbl133\" target=\"_blank\" rel=\"noreferrer noopener\">Made by Bum</a>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nAppLayout.propTypes = { //props의 type확인\r\n    // node: number, string, elements, array등을 통칭, \r\n    // isRequired: 실제type과 기입한 type이 다르면 오류메세지출력\r\n    children: PropTypes.node.isRequired,\r\n}\r\nexport default AppLayout;"]},"metadata":{},"sourceType":"module"}