{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({\n          user,\n          post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n}; // const rootReducer = combineReducers({\n//     // HYDRATE땜에 index로 reducer추가\n//     index: (state = {}, action) => {\n//         switch (action.type) {\n//             case HYDRATE:\n//                 console.log('HYDRATE', action);\n//                 return { ...state, ...action.payload };\n//             default:\n//                 return state;\n//         }\n//     },\n//     user,\n//     post,\n// });\n\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","console","log","payload","combinedReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,aAAOA,MAAM,CAACI,OAAd;;AACJ;AAAS;AACL,cAAMC,eAAe,GAAGV,eAAe,CAAC;AACpCC,UAAAA,IADoC;AAEpCC,UAAAA;AAFoC,SAAD,CAAvC;AAIA,eAAOQ,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;AACH;AAVL;AAYH,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst rootReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            console.log('HYDRATE', action);\r\n            return action.payload;\r\n        default: {\r\n            const combinedReducer = combineReducers({\r\n                user,\r\n                post,\r\n            });\r\n            return combinedReducer(state, action);\r\n        }\r\n    }\r\n};\r\n\r\n// const rootReducer = combineReducers({\r\n//     // HYDRATE땜에 index로 reducer추가\r\n//     index: (state = {}, action) => {\r\n//         switch (action.type) {\r\n//             case HYDRATE:\r\n//                 console.log('HYDRATE', action);\r\n//                 return { ...state, ...action.payload };\r\n//             default:\r\n//                 return state;\r\n//         }\r\n//     },\r\n//     user,\r\n//     post,\r\n// });\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}