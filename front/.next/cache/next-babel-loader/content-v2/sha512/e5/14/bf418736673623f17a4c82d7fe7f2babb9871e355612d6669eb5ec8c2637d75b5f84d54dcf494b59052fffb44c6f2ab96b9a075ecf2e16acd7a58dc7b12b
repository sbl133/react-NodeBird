{"ast":null,"code":"import axios from 'axios';\nimport { all, takeLatest, fork, delay, put, call } from 'redux-saga/effects'; // all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\n// take: 기다린다(동기) takeEvery: 기다린다(비동기)\n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); // const result = yield call(logOutAPI);\n\n    yield put({\n      type: LOG_OUT_SUCCESS // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/sagas/user.js"],"names":["axios","all","takeLatest","fork","delay","put","call","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","logInAPI","data","post","logIn","action","result","type","err","console","error","response","logOutAPI","logOut","signUpAPI","signUp","log","followAPI","follow","unfollowAPI","unfollow","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, takeLatest, fork, delay, put, call } from 'redux-saga/effects';\r\n// all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\r\n// take: 기다린다(동기) takeEvery: 기다린다(비동기)\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction logOutAPI() {\r\n    return axios.post('/logout');\r\n}\r\nfunction* logOut() {\r\n    try {\r\n        yield delay(1000);\r\n        // const result = yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n            // data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n            // data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction followAPI() {\r\n    return axios.post('/api/signup');\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/signup');\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}