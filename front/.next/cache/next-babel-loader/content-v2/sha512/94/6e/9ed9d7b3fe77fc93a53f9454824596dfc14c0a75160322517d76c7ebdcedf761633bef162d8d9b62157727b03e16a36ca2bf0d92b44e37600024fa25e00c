{"ast":null,"code":"var _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { Button, Card, Popover } from 'antd';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    id\n  } = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // const id = me?.id; // me && me.id\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 44\n      }\n    }),\n    actions: [//배열안에 jsx넣으면 key값을 같이 넣어줘야된다.\n    __jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 37\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, post.User.ncikname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/components/PostCard.js"],"names":["HeartOutlined","MessageOutlined","RetweetOutlined","EllipsisOutlined","Button","Card","Popover","React","useSelector","PropTypes","Avatar","PostImages","PostCard","post","id","state","user","me","Images","User","ncikname","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { HeartOutlined, MessageOutlined, RetweetOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Popover } from 'antd';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({post}) => {\r\n    const {id} = useSelector((state)=>state.user.me?.id)\r\n    // const id = me?.id; // me && me.id\r\n    return(\r\n        <div>\r\n            <Card cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions={[ //배열안에 jsx넣으면 key값을 같이 넣어줘야된다.\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    <HeartOutlined key=\"heart\"/>,\r\n                    <MessageOutlined key=\"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button type=\"danger\">삭제</Button>\r\n                                </>\r\n                            ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>,\r\n                ]}\r\n                >\r\n                <Card.Meta \r\n                    avatar={<Avatar>{post.User.ncikname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}    \r\n                />\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div>\r\n    );\r\n};\r\nPostCard.propTypes={\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}