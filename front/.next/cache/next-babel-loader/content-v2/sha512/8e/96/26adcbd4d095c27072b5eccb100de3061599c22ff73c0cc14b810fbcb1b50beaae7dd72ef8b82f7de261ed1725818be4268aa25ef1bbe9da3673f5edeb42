{"ast":null,"code":"import axios from 'axios';\nimport { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects'; // all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\n// take: 기다린다(동기) takeEvery: 기다린다.(비동기)\n// throttle 인자밀리초안에 한번만 take\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data); // FormData그대로 back에 전달\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`post/${data}`); // delete는 data못넣요\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchUploadImages), fork(watchAddPost), fork(watchLoadPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLikePost), fork(watchUnlikePost)]);\n}","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/sagas/post.js"],"names":["axios","all","call","fork","put","takeLatest","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","uploadImagesAPI","data","post","uploadImages","action","result","type","err","response","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostAPI","get","loadPost","addPostAPI","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","console","error","watchAddComment","watchAddPost","watchRemovePost","watchLoadPost","watchLikePost","watchUnlikePost","watchUploadImages","postSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\r\n// all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\r\n// take: 기다린다(동기) takeEvery: 기다린다.(비동기)\r\n// throttle 인자밀리초안에 한번만 take\r\nimport {\r\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n    REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\r\n    LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\r\n    LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE,\r\n    UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\r\n    UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images', data);// FormData그대로 back에 전달\r\n}\r\nfunction* uploadImages(action) {\r\n    try {\r\n        const result = yield call(uploadImagesAPI, action.data);\r\n        yield put({\r\n            type: UPLOAD_IMAGES_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UPLOAD_IMAGES_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\nfunction* likePost(action) {\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LIKE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\nfunction* unlikePost(action) {\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNLIKE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction loadPostAPI(data) {\r\n    return axios.get('/posts', data);\r\n}\r\nfunction* loadPost(action) {\r\n    try {\r\n        const result = yield call(loadPostAPI, action.data);\r\n        yield put({\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post', data);\r\n}\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: result.data.id,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction removePostAPI(data) {\r\n    return axios.delete(`post/${data}`); // delete는 data못넣요\r\n}\r\nfunction* removePost(action) {\r\n    try {\r\n        const result = yield call(removePostAPI, action.data);\r\n        yield put({\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: result.data,\r\n        });\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\nfunction* addComment(action) {\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLoadPost() {\r\n    yield throttle(5000, LOAD_POSTS_REQUEST, loadPost);\r\n}\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchUploadImages() {\r\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchUploadImages),\r\n        fork(watchAddPost),\r\n        fork(watchLoadPost),\r\n        fork(watchAddComment),\r\n        fork(watchRemovePost),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}