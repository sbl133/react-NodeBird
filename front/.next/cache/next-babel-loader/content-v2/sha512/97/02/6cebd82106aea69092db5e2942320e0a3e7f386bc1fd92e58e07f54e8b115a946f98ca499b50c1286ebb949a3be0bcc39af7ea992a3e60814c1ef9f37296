{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nvar configureStore = function configureStore() {\n  var middleware = []; //enhancer : redux기능확장\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middleware)) //보안상의 이유로 배포용일때는 devtool연결 x\n  : composeWithDevTools(applyMiddleware.apply(void 0, middleware)); //개발용일땐 o\n\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/store/configureStore.js"],"names":["compose","createStore","applyMiddleware","createWrapper","reducer","composeWithDevTools","configureStore","middleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,UAAU,GAAG,EAAnB,CADyB,CAEzB;;AACA,MAAMC,QAAQ,GAAG,QACXR,OAAO,CAACE,eAAe,MAAf,SAAmBK,UAAnB,CAAD,CADI,CAEb;AAFa,IAGXF,mBAAmB,CAACH,eAAe,MAAf,SAAmBK,UAAnB,CAAD,CAHzB,CAHyB,CAMiC;;AAC1D,MAAME,KAAK,GAAGR,WAAW,CAACG,OAAD,EAAUI,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CATD;;AAWA,IAAMC,OAAO,GAAGP,aAAa,CAACG,cAAD,EAAiB;AAACK,EAAAA,KAAK;AAAN,CAAjB,CAA7B;AACA,eAAeD,OAAf","sourcesContent":["import {compose, createStore, applyMiddleware} from 'redux';\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport reducer from '../reducers'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nconst configureStore = () => {\r\n    const middleware = [];\r\n    //enhancer : redux기능확장\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middleware)) \r\n        //보안상의 이유로 배포용일때는 devtool연결 x\r\n        : composeWithDevTools(applyMiddleware(...middleware)) //개발용일땐 o\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {debug: process.env.NODE_ENV === 'development'});\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}