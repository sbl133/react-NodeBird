{"ast":null,"code":"import axios from 'axios';\nimport { all, takeLatest, fork, delay, put } from \"redux-saga/effects\"; //all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\n//take: 기다린다(동기) takeEvery: 기다린다(비동기)\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn'); //const result = yield call(logInAPI);\n\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); //const result = yield call(logOutAPI);\n\n    yield put({\n      type: 'LOG_OUT_SUCCESS' //data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/sagas/user.js"],"names":["axios","all","takeLatest","fork","delay","put","logInAPI","data","post","logIn","action","console","log","type","err","error","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD,C,CACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOP,KAAK,CAACQ,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AACD,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADD,CAEC;;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENN,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GARD,CAQE,OAAMO,GAAN,EAAU;AACRH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENE,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFd,KAAD,CAAT;AAIH;AACJ;;AACD,SAASU,SAAT,GAAoB;AAChB,SAAOjB,KAAK,CAACQ,IAAN,CAAW,aAAX,CAAP;AACH;;AACD,UAAUU,MAAV,GAAkB;AACd,MAAG;AACC,UAAMd,KAAK,CAAC,IAAD,CAAX,CADD,CAEC;;AACA,UAAMC,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAW;AACT,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENN,MAAAA,IAAI,EAAEO,GAAG,CAACE,QAAJ,CAAaT;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUY,UAAV,GAAsB;AAClB,QAAMjB,UAAU,CAAC,gBAAD,EAAmBO,KAAnB,CAAhB;AACH;;AACD,UAAUW,WAAV,GAAuB;AACnB,QAAMlB,UAAU,CAAC,iBAAD,EAAoBgB,MAApB,CAAhB;AACH;;AACD,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMpB,GAAG,CAAC,CACNE,IAAI,CAACgB,UAAD,CADE,EAENhB,IAAI,CAACiB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios';\r\nimport { all, takeLatest, fork, delay, put } from \"redux-saga/effects\";\r\n//all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\r\n//take: 기다린다(동기) takeEvery: 기다린다(비동기)\r\n\r\nfunction logInAPI(data){\r\n    return axios.post('/api/login', data);\r\n}\r\nfunction* logIn(action){\r\n    try{\r\n        console.log('saga logIn');\r\n        //const result = yield call(logInAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: action.data,\r\n        });\r\n    } catch(err){\r\n        console.error(err);\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction logOutAPI(){\r\n    return axios.post('/api/logout');\r\n}\r\nfunction* logOut(){\r\n    try{\r\n        yield delay(1000);\r\n        //const result = yield call(logOutAPI);\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n            //data: result.data\r\n        });\r\n    } catch (err){\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn(){\r\n    yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeLatest('LOG_OUT_REQUEST', logOut);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}