{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; // 동적으로 action을 할당하기위한 action creater\n\nexport const loginRequestAction = data => {\n  console.log('loginAction');\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = data => ({\n  type: LOG_OUT_REQUEST,\n  data\n});\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: 'Bum',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }],\n  Follower: [{\n    nickname: 'qnrlch'\n  }]\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true;\n      draft.me.Followings.push({\n        id: action.data\n      });\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data);\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpData = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/reducers/user.js"],"names":["produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","console","log","type","logoutRequestAction","dummyUser","nickname","id","Posts","Followings","Follower","reducer","state","action","draft","push","error","filter","v","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    changeNicknameLoading: false, // 닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null,\r\n    followLoading: false,\r\n    followDone: false,\r\n    followError: null,\r\n    unfollowLoading: false,\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n};\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n// 동적으로 action을 할당하기위한 action creater\r\nexport const loginRequestAction = (data) => {\r\n    console.log('loginAction');\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    };\r\n};\r\nexport const logoutRequestAction = (data) => ({\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data,\r\n    nickname: 'Bum',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '부기초' }],\r\n    Follower: [{ nickname: 'qnrlch' }],\r\n});\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followError = null;\r\n            draft.followDone = false;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.data });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowError = null;\r\n            draft.unfollowDone = false;\r\n            break;\r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n        case LOG_IN_REQUEST:\r\n            draft.logInLoading = true;\r\n            draft.logInError = null;\r\n            draft.logInDone = false;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpData = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}