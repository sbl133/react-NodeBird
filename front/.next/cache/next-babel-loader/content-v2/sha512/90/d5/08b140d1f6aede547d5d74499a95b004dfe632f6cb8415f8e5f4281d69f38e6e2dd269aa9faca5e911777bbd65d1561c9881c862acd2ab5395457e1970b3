{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading,\n      retweetError = _useSelector2.retweetError;\n\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    function onScroll() {\n      // scrollY : 현재위치 clientHeight : 현재화면길이 scrollHeight : 스크롤총길이\n      // (끝까지내린)scrollY + clientHeight = scrollHeight\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        var _mainPosts;\n\n        var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 38\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n}; // context안에 store가 들어있음\n\n\n_s(Home, \"8Y2QDvFr7SHjX8Wo8GKbZ6XyrFk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADe,qBAEAC,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFX;AAAA,MAEPC,EAFO,gBAEPA,EAFO;;AAAA,sBAIPT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAJJ;AAAA,MAGPC,SAHO,iBAGPA,SAHO;AAAA,MAGIC,YAHJ,iBAGIA,YAHJ;AAAA,MAGkBC,gBAHlB,iBAGkBA,gBAHlB;AAAA,MAGoCC,YAHpC,iBAGoCA,YAHpC;;AAMfhB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIgB,YAAJ,EAAkB;AACdC,MAAAA,KAAK,CAACD,YAAD,CAAL;AACH;AACJ,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAKAhB,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASkB,QAAT,GAAoB;AAChB;AACA;AACA,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAD5C,EACiD;AAAA;;AACzC,YAAMC,MAAM,iBAAGZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;;AACJ,YAAIb,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACnCP,UAAAA,QAAQ,CAAC;AACLoB,YAAAA,IAAI,EAAEtB,kBADD;AAELmB,YAAAA,MAAM,EAANA;AAFK,WAAD,CAAR;AAIH;AACJ;AACJ;;AACDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACH,KAFD;AAGH,GAnBQ,EAmBN,CAACJ,YAAD,EAAeC,gBAAf,EAAiCF,SAAjC,CAnBM,CAAT;AAoBA,sBACI,QAAC,SAAD;AAAA,eACKF,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADX,EAEKE,SAAS,CAACkB,GAAV,CAAc,UAACnB,IAAD;AAAA,0BAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACe,EAApB;AAAA;AAAA;AAAA;AAAA,eAAV;AAAA,KAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CArCD,C,CAsCA;;;GAtCMpB,I;UACeN,W,EACFC,W,EAEPA,W;;;KAJNK,I;;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, hasMorePosts, loadPostsLoading, retweetError,\r\n        } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        if (retweetError) {\r\n            alert(retweetError);\r\n        }\r\n    }, [retweetError]);\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            // scrollY : 현재위치 clientHeight : 현재화면길이 scrollHeight : 스크롤총길이\r\n            // (끝까지내린)scrollY + clientHeight = scrollHeight\r\n            if (window.scrollY + document.documentElement.clientHeight >\r\n                document.documentElement.scrollHeight - 300) {\r\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n    );\r\n};\r\n// context안에 store가 들어있음\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) { // 쿠키공유차단\r\n        axios.defaults.headers.Cookie = cookie; // 서버로 쿠키전달\r\n    }\r\n    context.store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}