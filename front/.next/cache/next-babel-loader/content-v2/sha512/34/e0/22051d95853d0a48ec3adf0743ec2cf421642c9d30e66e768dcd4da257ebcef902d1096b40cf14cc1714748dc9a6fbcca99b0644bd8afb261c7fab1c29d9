{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  loadUserLoading: false,\n  //\n  loadUserDone: false,\n  loadUserError: null,\n  removeFollowerLoading: false,\n  //\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  loadFollowingsLoading: false,\n  //\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  loadFollowersLoading: false,\n  //\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  loadMyInfoLoading: false,\n  // 유저정보 가져오기 시도중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  userInfo: null\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE'; // 동적으로 action을 할당하기위한 action creater\n\nexport const loginRequestAction = data => {\n  console.log('loginAction');\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = data => ({\n  type: LOG_OUT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_USER_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n\n    case LOAD_USER_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.loadUserDone = true;\n      draft.userInfo = action.data;\n      break;\n\n    case LOAD_USER_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerError = null;\n      draft.removeFollowerDone = false;\n      break;\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerDone = true;\n      draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n      break;\n\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsDone = true;\n      draft.me.Followings = action.data;\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersDone = true;\n      draft.me.Followers = action.data;\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoError = null;\n      draft.loadMyInfoDone = false;\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.error;\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.logInDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutDone = false;\n      draft.logOutError = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpData = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      console.log('회원가입이 완료되었습니다.');\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      console.log(action.data);\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data.PostId);\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadUserLoading","loadUserDone","loadUserError","removeFollowerLoading","removeFollowerDone","removeFollowerError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","userInfo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","loginRequestAction","data","console","log","type","logoutRequestAction","reducer","state","action","draft","error","Followers","filter","v","id","UserId","Followings","push","signUpData","nickname","Posts","unshift","PostId"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n    loadUserLoading: false, //\r\n    loadUserDone: false,\r\n    loadUserError: null,\r\n    removeFollowerLoading: false, //\r\n    removeFollowerDone: false,\r\n    removeFollowerError: null,\r\n    loadFollowingsLoading: false, //\r\n    loadFollowingsDone: false,\r\n    loadFollowingsError: null,\r\n    loadFollowersLoading: false, //\r\n    loadFollowersDone: false,\r\n    loadFollowersError: null,\r\n    loadMyInfoLoading: false, // 유저정보 가져오기 시도중\r\n    loadMyInfoDone: false,\r\n    loadMyInfoError: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n    signUpLoading: false, // 회원가입 시도중\r\n    signUpDone: false,\r\n    signUpError: null,\r\n    changeNicknameLoading: false, // 닉네임 변경 시도중\r\n    changeNicknameDone: false,\r\n    changeNicknameError: null,\r\n    followLoading: false,\r\n    followDone: false,\r\n    followError: null,\r\n    unfollowLoading: false,\r\n    unfollowDone: false,\r\n    unfollowError: null,\r\n    me: null,\r\n    userInfo: null,\r\n};\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n// 동적으로 action을 할당하기위한 action creater\r\nexport const loginRequestAction = (data) => {\r\n    console.log('loginAction');\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    };\r\n};\r\nexport const logoutRequestAction = (data) => ({\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n        case LOAD_USER_REQUEST:\r\n            draft.loadUserLoading = true;\r\n            draft.loadUserError = null;\r\n            draft.loadUserDone = false;\r\n            break;\r\n        case LOAD_USER_SUCCESS:\r\n            draft.loadUserLoading = false;\r\n            draft.loadUserDone = true;\r\n            draft.userInfo = action.data;\r\n            break;\r\n        case LOAD_USER_FAILURE:\r\n            draft.loadUserLoading = false;\r\n            draft.loadUserError = action.error;\r\n            break;\r\n        case REMOVE_FOLLOWER_REQUEST:\r\n            draft.removeFollowerLoading = true;\r\n            draft.removeFollowerError = null;\r\n            draft.removeFollowerDone = false;\r\n            break;\r\n        case REMOVE_FOLLOWER_SUCCESS:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerDone = true;\r\n            draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n            break;\r\n        case REMOVE_FOLLOWER_FAILURE:\r\n            draft.removeFollowerLoading = false;\r\n            draft.removeFollowerError = action.error;\r\n            break;\r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n            draft.loadFollowingsLoading = true;\r\n            draft.loadFollowingsError = null;\r\n            draft.loadFollowingsDone = false;\r\n            break;\r\n        case LOAD_FOLLOWINGS_SUCCESS:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsDone = true;\r\n            draft.me.Followings = action.data;\r\n            break;\r\n        case LOAD_FOLLOWINGS_FAILURE:\r\n            draft.loadFollowingsLoading = false;\r\n            draft.loadFollowingsError = action.error;\r\n            break;\r\n            case LOAD_FOLLOWERS_REQUEST:\r\n            draft.loadFollowersLoading = true;\r\n            draft.loadFollowersError = null;\r\n            draft.loadFollowersDone = false;\r\n            break;\r\n        case LOAD_FOLLOWERS_SUCCESS:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersDone = true;\r\n            draft.me.Followers = action.data;\r\n            break;\r\n        case LOAD_FOLLOWERS_FAILURE:\r\n            draft.loadFollowersLoading = false;\r\n            draft.loadFollowersError = action.error;\r\n            break;\r\n        case LOAD_MY_INFO_REQUEST:\r\n            draft.loadMyInfoLoading = true;\r\n            draft.loadMyInfoError = null;\r\n            draft.loadMyInfoDone = false;\r\n            break;\r\n        case LOAD_MY_INFO_SUCCESS:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOAD_MY_INFO_FAILURE:\r\n            draft.loadMyInfoLoading = false;\r\n            draft.loadMyInfoError = action.error;\r\n            break;\r\n        case FOLLOW_REQUEST:\r\n            draft.followLoading = true;\r\n            draft.followError = null;\r\n            draft.followDone = false;\r\n            break;\r\n        case FOLLOW_SUCCESS:\r\n            draft.followLoading = false;\r\n            draft.followDone = true;\r\n            draft.me.Followings.push({ id: action.data.UserId });\r\n            break;\r\n        case FOLLOW_FAILURE:\r\n            draft.followLoading = false;\r\n            draft.followError = action.error;\r\n            break;\r\n        case UNFOLLOW_REQUEST:\r\n            draft.unfollowLoading = true;\r\n            draft.unfollowError = null;\r\n            draft.unfollowDone = false;\r\n            break;\r\n        case UNFOLLOW_SUCCESS:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowDone = true;\r\n            draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n            break;\r\n        case UNFOLLOW_FAILURE:\r\n            draft.unfollowLoading = false;\r\n            draft.unfollowError = action.error;\r\n            break;\r\n        case LOG_IN_REQUEST:\r\n            draft.logInLoading = true;\r\n            draft.logInError = null;\r\n            draft.logInDone = false;\r\n            break;\r\n        case LOG_IN_SUCCESS:\r\n            draft.logInLoading = false;\r\n            draft.logInDone = true;\r\n            draft.me = action.data;\r\n            break;\r\n        case LOG_IN_FAILURE:\r\n            draft.logInLoading = false;\r\n            draft.logInError = action.error;\r\n            break;\r\n        case LOG_OUT_REQUEST:\r\n            draft.logOutLoading = true;\r\n            draft.logOutDone = false;\r\n            draft.logOutError = null;\r\n            break;\r\n        case LOG_OUT_SUCCESS:\r\n            draft.logOutLoading = false;\r\n            draft.logOutDone = true;\r\n            draft.me = null;\r\n            break;\r\n        case LOG_OUT_FAILURE:\r\n            draft.logOutLoading = false;\r\n            draft.logOutError = action.error;\r\n            break;\r\n        case SIGN_UP_REQUEST:\r\n            draft.signUpLoading = true;\r\n            draft.signUpData = false;\r\n            draft.signUpError = null;\r\n            break;\r\n        case SIGN_UP_SUCCESS:\r\n            draft.signUpLoading = false;\r\n            draft.signUpDone = true;\r\n            console.log('회원가입이 완료되었습니다.');\r\n            break;\r\n        case SIGN_UP_FAILURE:\r\n            draft.signUpLoading = false;\r\n            draft.signUpError = action.error;\r\n            break;\r\n        case CHANGE_NICKNAME_REQUEST:\r\n            draft.changeNicknameLoading = true;\r\n            draft.changeNicknameDone = false;\r\n            draft.changeNicknameError = null;\r\n            break;\r\n        case CHANGE_NICKNAME_SUCCESS:\r\n            console.log(action.data);\r\n            draft.me.nickname = action.data.nickname;\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameDone = true;\r\n            break;\r\n        case CHANGE_NICKNAME_FAILURE:\r\n            draft.changeNicknameLoading = false;\r\n            draft.changeNicknameError = action.error;\r\n            break;\r\n        case ADD_POST_TO_ME:\r\n            draft.me.Posts.unshift({ id: action.data });\r\n            break;\r\n        case REMOVE_POST_OF_ME:\r\n            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data.PostId);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}