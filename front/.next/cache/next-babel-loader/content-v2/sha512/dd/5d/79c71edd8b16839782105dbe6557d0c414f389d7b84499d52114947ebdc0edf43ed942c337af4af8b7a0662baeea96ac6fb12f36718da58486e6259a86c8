{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\components\\\\FollowButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nvar FollowButton = function FollowButton(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLading = _useSelector.unfollowLading;\n\n  var dispatch = useDispatch();\n  var isFollowing = me && me.Followings.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === me.id) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLading,\n    onClick: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FollowButton, \"oPp2uYavcE0KhUOOz31vSSnnQGI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FollowButton;\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButton\");","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/components/FollowButton.js"],"names":["PropTypes","React","useCallback","Button","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","state","user","me","followLoading","unfollowLading","dispatch","isFollowing","Followings","find","v","id","User","onClickButton","type","data","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,qBACeJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAD1B;AAAA,MACvBC,EADuB,gBACvBA,EADuB;AAAA,MACnBC,aADmB,gBACnBA,aADmB;AAAA,MACJC,cADI,gBACJA,cADI;;AAE/B,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,WAAW,GAAGJ,EAAE,IAAIA,EAAE,CAACK,UAAH,CAAcC,IAAd,CAAmB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA1B;AAAA,GAAnB,CAA1B;AACA,MAAME,aAAa,GAAGpB,WAAW,CAAC,YAAM;AACpC,QAAIc,WAAJ,EAAiB;AACbD,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEhB,gBADD;AAELiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KALD,MAKO;AACHL,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEjB,cADD;AAELkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;;AAcA,MAAIP,IAAI,CAACY,IAAL,CAAUD,EAAV,KAAiBR,EAAE,CAACQ,EAAxB,EAA4B;AACxB,WAAO,IAAP;AACH;;AACD,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,aAAa,IAAIC,cAAlC;AAAkD,IAAA,OAAO,EAAEQ,aAA3D;AAAA,cACKN,WAAW,GAAG,MAAH,GAAY;AAD5B;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CA1BD;;GAAMR,Y;UAC4CH,W,EAC7BD,W;;;KAFfI,Y;AA2BNA,YAAY,CAACiB,SAAb,GAAyB;AACrBhB,EAAAA,IAAI,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AADF,CAAzB;AAIA,eAAenB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n    const { me, followLoading, unfollowLading } = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n    const isFollowing = me && me.Followings.find((v) => v.id === post.User.id);\r\n    const onClickButton = useCallback(() => {\r\n        if (isFollowing) {\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        }\r\n    }, [isFollowing]);\r\n\r\n    if (post.User.id === me.id) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Button loading={followLoading || unfollowLading} onClick={onClickButton}>\r\n            {isFollowing ? '언팔로우' : '팔로우'}\r\n        </Button>\r\n    );\r\n};\r\nFollowButton.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}