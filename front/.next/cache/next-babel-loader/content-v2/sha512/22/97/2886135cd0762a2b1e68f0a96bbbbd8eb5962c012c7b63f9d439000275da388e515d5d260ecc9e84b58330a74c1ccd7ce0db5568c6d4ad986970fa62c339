{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [sagaMiddleware]; // enhancer : redux기능확장\n\n  var enhancer = true ? compose(applyMiddleware.apply(void 0, middleware)) // 보안상의 이유로 배포용일때는 devtool연결 x\n  : composeWithDevTools(applyMiddleware.apply(void 0, middleware)); // 개발용일땐 o\n\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":null,"metadata":{},"sourceType":"module"}