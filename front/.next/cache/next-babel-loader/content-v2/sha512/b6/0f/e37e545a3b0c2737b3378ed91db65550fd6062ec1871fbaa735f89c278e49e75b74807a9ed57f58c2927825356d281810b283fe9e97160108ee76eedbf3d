{"ast":null,"code":"import axios from 'axios';\nimport { all, takeLatest, fork, delay, put, call } from 'redux-saga/effects'; // all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\n// take: 기다린다(동기) takeEvery: 기다린다(비동기)\n\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.post('/user/nickname', data);\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* wtachChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(wtachChangeNickname)]);\n}","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/sagas/user.js"],"names":["axios","all","takeLatest","fork","delay","put","call","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","changeNicknameAPI","data","post","changeNickname","action","result","type","err","console","error","response","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","log","followAPI","follow","unfollowAPI","unfollow","loadMyInfoAPI","get","loadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","watchLoadMyInfo","wtachChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, takeLatest, fork, delay, put, call } from 'redux-saga/effects';\r\n// all: 안에있는effects동시실행 fork: 비동기함수호출 call: 동기함수호출 put: dispatch\r\n// take: 기다린다(동기) takeEvery: 기다린다(비동기)\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n    LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\r\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.post('/user/nickname', data);\r\n}\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: CHANGE_NICKNAME_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data);\r\n}\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout');\r\n}\r\nfunction* logOut() {\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n            // data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data);\r\n}\r\nfunction* signUp(action) {\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n            // data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction followAPI() {\r\n    return axios.post('/api/signup');\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/signup');\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI, action.data);\r\n        yield put({\r\n            type: LOAD_MY_INFO_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOAD_MY_INFO_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* wtachChangeNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(wtachChangeNickname),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}