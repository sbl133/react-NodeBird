{"ast":null,"code":"var _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n    setText('');\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"/oxuA29Cj9GQr28EHjGwZLW+2EY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useState","Form","Input","Button","useDispatch","useSelector","addPost","PostForm","state","post","imagePaths","text","setText","dispatch","imageInput","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","map","v","display","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,qBACEF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADb;AAAA,MACZC,UADY,gBACZA,UADY;;AAAA,kBAEIV,QAAQ,CAAC,EAAD,CAFZ;AAAA,MAEZW,IAFY;AAAA,MAENC,OAFM;;AAGnB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,UAAU,GAAGf,MAAM,EAAzB;AACA,MAAMgB,YAAY,GAAGjB,WAAW,CAAC,UAACkB,CAAD,EAAK;AAClCJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,MAAMC,QAAQ,GAACrB,WAAW,CAAC,YAAI;AAC3Be,IAAAA,QAAQ,CAACP,OAAD,CAAR;AACAM,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAHyB,EAGvB,EAHuB,CAA1B;AAIA,MAAMQ,kBAAkB,GAAGtB,WAAW,CAAC,YAAI;AACvCgB,IAAAA,UAAU,CAACO,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACR,UAAU,CAACO,OAAZ,CAFmC,CAAtC;AAGA,SACI,MAAC,IAAD;AACA,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAE;AAAT,KADP;AAEA,IAAA,OAAO,EAAC,qBAFR;AAGA,IAAA,QAAQ,EAAEJ,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,KAAD,CAAO,QAAP;AACA,IAAA,KAAK,EAAER,IADP;AAEA,IAAA,QAAQ,EAAEI,YAFV;AAGA,IAAA,SAAS,EAAE,GAHX;AAIA,IAAA,WAAW,EAAC,wEAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,GAAG,EAAED,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAC,eAAO;AAAR,KAA9B;AAAgD,IAAA,QAAQ,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAVJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,UAAU,CAACc,GAAX,CAAe,UAACC,CAAD,EAAO;AACnB,WACA;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,CAAV;AAAa,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE;AAAR,OAApB;AAAsC,MAAA,GAAG,EAAEF,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,CAFJ,CADA;AAMH,GAPA,CADL,CAfJ,CADJ;AA4BH,CA3CD;;GAAMlB,Q;UACmBF,W,EAEJD,W;;;KAHfG,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, {useCallback, useRef, useState} from 'react';\r\nimport {Form, Input, Button} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPost} from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const {imagePaths} = useSelector((state) => state.post);\r\n    const [text, setText] =useState('');\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const onChangeText = useCallback((e)=>{\r\n        setText(e.target.value);\r\n    }, [])\r\n    const onSubmit=useCallback(()=>{\r\n        dispatch(addPost);\r\n        setText('');\r\n    }, [])\r\n    const onClickImageUpload = useCallback(()=>{\r\n        imageInput.current.click();\r\n    }, [imageInput.current])\r\n    return(\r\n        <Form \r\n        style={{margin: '10px 0 20px'}}\r\n        encType=\"multipart/form-data\"\r\n        onFinish={onSubmit}>\r\n            <Input.TextArea \r\n            value={text}\r\n            onChange={onChangeText}\r\n            maxLength={140}\r\n            placeholder=\"어떤 신기한 일이 있었나요?\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => {\r\n                    return(\r\n                    <div key={v} style={{display: 'inline-block'}}>\r\n                        <img src={v} style={{width: '200px'}} alt={v} />\r\n                        <div><Button>제거</Button></div>\r\n                    </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}