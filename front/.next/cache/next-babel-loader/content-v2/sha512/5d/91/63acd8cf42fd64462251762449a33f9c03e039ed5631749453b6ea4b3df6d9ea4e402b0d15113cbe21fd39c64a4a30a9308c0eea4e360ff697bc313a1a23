{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\major\\\\react-NodeBird\\\\prepare\\\\front\\\\pages\\\\hashtag\\\\[tag].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Hashtag, \"XuihQYDxbCMqODN9amCxLo+UGrs=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/major/react-NodeBird/prepare/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","LOAD_HASHTAG_POSTS_REQUEST","PostCard","AppLayout","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,0BAAT,QAA2C,qBAA3C;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAClB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,MAAM,GAAGN,SAAS,EAAxB;AAFkB,MAGVO,GAHU,GAGFD,MAAM,CAACE,KAHL,CAGVD,GAHU;;AAAA,qBAIoCR,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAJ/C;AAAA,MAIVC,SAJU,gBAIVA,SAJU;AAAA,MAICC,YAJD,gBAICA,YAJD;AAAA,MAIeC,gBAJf,gBAIeA,gBAJf;;AAMlBhB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMiB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACJF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GADxC,EAC6C;AAC7C,YAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACnCR,UAAAA,QAAQ,CAAC;AACLgB,YAAAA,IAAI,EAAEpB,0BADD;AAELqB,YAAAA,MAAM,EAAEX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,IAAmCZ,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFtE;AAGLC,YAAAA,IAAI,EAAElB;AAHD,WAAD,CAAR;AAKH;AACA;AACJ,KAXD;;AAYAQ,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACbC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACC,KAFD;AAGH,GAjBQ,EAiBN,CAACH,SAAS,CAACY,MAAX,EAAmBX,YAAnB,EAAiCL,GAAjC,EAAsCM,gBAAtC,CAjBM,CAAT;AAmBA,sBACI,QAAC,SAAD;AAAA,cACCF,SAAS,CAACiB,GAAV,CAAc,UAACC,CAAD;AAAA,0BACX,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAd;AADD;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAhCD;;GAAMpB,O;UACeN,W,EACFE,S,EAEuCD,W;;;KAJpDK,O;;AAqDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst Hashtag = () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { tag } = router.query;\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => {\r\n            if (window.pageYOffset + document.documentElement.clientHeight >\r\n            document.documentElement.scrollHeight - 300) {\r\n            if (hasMorePosts && !loadPostsLoading) {\r\n                dispatch({\r\n                    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n                    lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n                    data: tag,\r\n                });\r\n            }\r\n            }\r\n        };\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n        window.removeEventListener('scroll', onScroll);\r\n        };\r\n    }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\r\n\r\n    return (\r\n        <AppLayout>\r\n        {mainPosts.map((c) => (\r\n            <PostCard key={c.id} post={c} />\r\n        ))}\r\n        </AppLayout>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: context.params.tag,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  console.log('getState', context.store.getState().post.mainPosts);\r\n  return { props: {} };\r\n});\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}